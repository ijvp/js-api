name: Deploy dashboard javascript to ECR and EC2

on:
  push:
    branches: 
      - main

env:
  AWS_ECR_REPO: dashboard-api
  AWS_REGION: sa-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:        
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
           
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.AWS_ECR_REPO }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: SSH into EC2 instance and deploy container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SSH_HOST }}
          username: ${{ secrets.EC2_SSH_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            if [ "$(docker ps -aq -f name=dashboard-javascript-api)" ]; then
              sudo docker stop dashboard-javascript-api
              sudo docker rm dashboard-javascript-api
            fi

            sudo docker image prune -af

            docker pull ${{ env.AWS_ECR_REPO }}:${{ github.sha }}

            sudo docker run -d -p 8080:8080 --name dashboard-javascript-api --restart on-failure --env-file /home/ec2-user/js-api-env/.env --network dashboard-api-network ${{ env.AWS_ECR_REPO }}:${{ github.sha }}